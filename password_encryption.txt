//Password Encryption
var genRandomString = function (length) {
  return crypto
    .randomBytes(Math.ceil(length / 2))
    .toString("hex") //to convert into hexadecimal format
    .slice(0, length); //return required no of characters
};

var sha512 = function (password, salt) {
  var hash = crypto.createHmac("sha512", salt);
  hash.update(password);
  var value = hash.digest("hex");
  return {
    salt,
    passwordHash: value,
  };
};

var saltHashPassword = function (userPassword) {
  var salt = genRandomString(16); //generates random string of 16 characters to salt
  var passwordData = sha512(userPassword, salt);
  return passwordData;
};

function checkHashPassword(password, salt) {
  var passwordData = sha512(password, salt);
  return passwordData;
}


var unique_id = uuid.v4();
  var plaintPassword = postData.password;
  var hashData = saltHashPassword(plaintPassword);
  var encrypted_password = hashData.passwordHash;
  var salt = hashData.salt;


var salt = result[0].salt; //get salt of result if account exists
      var encrypted_password = result[0].encrypted_password; //Hash password from login request with salt in database
      var hashedPassword = checkHashPassword(password, salt).passwordHash;

      if (encrypted_password == hashedPassword)
        res.end(JSON.stringify(result[0]));
      else res.end(JSON.stringify("Wrong Password"));